pub use revm_interpreter::OpCode;

// TODO: refactor all of this based on revm_interpreter changes

pub trait OpCodeMetadata {
    fn pushes(&self) -> u8;
    fn pops(&self) -> u8;
    fn minimum_immediates(&self) -> u8;
}

impl OpCodeMetadata for OpCode {
    /// Number of stack items the OpCode  to the stack.
    /// 
    /// If OpCode does not exist, 0 is the default.
    fn pushes(&self) -> u8 {
        if let Some(op) = METADATA_JUMPMAP[self.u8() as usize] {
            op.0
        } else {
            0
        }
    }

    /// Number of stack items the OpCode pops from the stack.
    /// 
    /// If OpCode does not exist, 0 is the default.
    fn pops(&self) -> u8 {
        if let Some(op) = METADATA_JUMPMAP[self.u8() as usize] {
            op.1
        } else {
            0
        }
    }

    /// Minimum number of immediate bytes that MUST follow the OpCode.
    /// 
    /// > Note: The `RJUMPV` instruction MUST be followed by a single byte to indicate the jumptable
    /// > length, so the exact number of immediate bytes for the `RJUMPV` may only be known once the
    /// > following byte is inlcuded.
    /// 
    /// If OpCode does not exist, 0 is the default.
    fn minimum_immediates(&self) -> u8 {
        if let Some(op) = METADATA_JUMPMAP[self.u8() as usize] {
            op.2
        } else {
            0
        }
    }
}

/// Metadata Jumpmap
///
/// Tuple Components: (pushes, pops, minimum_immediates)
pub const METADATA_JUMPMAP: [Option<(u8, u8, u8)>; 256] = [
    /* 0x00 */ Some((0, 0, 0)),
    /* 0x01 */ Some((0, 0, 0)),
    /* 0x02 */ Some((0, 0, 0)),
    /* 0x03 */ Some((0, 0, 0)),
    /* 0x04 */ Some((0, 0, 0)),
    /* 0x05 */ Some((0, 0, 0)),
    /* 0x06 */ Some((0, 0, 0)),
    /* 0x07 */ Some((0, 0, 0)),
    /* 0x08 */ Some((0, 0, 0)),
    /* 0x09 */ Some((0, 0, 0)),
    /* 0x0a */ Some((0, 0, 0)),
    /* 0x0b */ Some((0, 0, 0)),
    /* 0x0c */ None,
    /* 0x0d */ None,
    /* 0x0e */ None,
    /* 0x0f */ None,
    /* 0x10 */ Some((0, 0, 0)),
    /* 0x11 */ Some((0, 0, 0)),
    /* 0x12 */ Some((0, 0, 0)),
    /* 0x13 */ Some((0, 0, 0)),
    /* 0x14 */ Some((0, 0, 0)),
    /* 0x15 */ Some((0, 0, 0)),
    /* 0x16 */ Some((0, 0, 0)),
    /* 0x17 */ Some((0, 0, 0)),
    /* 0x18 */ Some((0, 0, 0)),
    /* 0x19 */ Some((0, 0, 0)),
    /* 0x1a */ Some((0, 0, 0)),
    /* 0x1b */ Some((0, 0, 0)),
    /* 0x1c */ Some((0, 0, 0)),
    /* 0x1d */ Some((0, 0, 0)),
    /* 0x1e */ None,
    /* 0x1f */ None,
    /* 0x20 */ Some((0, 0, 0)),
    /* 0x21 */ None,
    /* 0x22 */ None,
    /* 0x23 */ None,
    /* 0x24 */ None,
    /* 0x25 */ None,
    /* 0x26 */ None,
    /* 0x27 */ None,
    /* 0x28 */ None,
    /* 0x29 */ None,
    /* 0x2a */ None,
    /* 0x2b */ None,
    /* 0x2c */ None,
    /* 0x2d */ None,
    /* 0x2e */ None,
    /* 0x2f */ None,
    /* 0x30 */ Some((0, 0, 0)),
    /* 0x31 */ Some((0, 0, 0)),
    /* 0x32 */ Some((0, 0, 0)),
    /* 0x33 */ Some((0, 0, 0)),
    /* 0x34 */ Some((0, 0, 0)),
    /* 0x35 */ Some((0, 0, 0)),
    /* 0x36 */ Some((0, 0, 0)),
    /* 0x37 */ Some((0, 0, 0)),
    /* 0x38 */ Some((0, 0, 0)),
    /* 0x39 */ Some((0, 0, 0)),
    /* 0x3a */ Some((0, 0, 0)),
    /* 0x3b */ Some((0, 0, 0)),
    /* 0x3c */ Some((0, 0, 0)),
    /* 0x3d */ Some((0, 0, 0)),
    /* 0x3e */ Some((0, 0, 0)),
    /* 0x3f */ Some((0, 0, 0)),
    /* 0x40 */ Some((0, 0, 0)),
    /* 0x41 */ Some((0, 0, 0)),
    /* 0x42 */ Some((0, 0, 0)),
    /* 0x43 */ Some((0, 0, 0)),
    /* 0x44 */ Some((0, 0, 0)),
    /* 0x45 */ Some((0, 0, 0)),
    /* 0x46 */ Some((0, 0, 0)),
    /* 0x47 */ Some((0, 0, 0)),
    /* 0x48 */ Some((0, 0, 0)),
    /* 0x49 */ None,
    /* 0x4a */ None,
    /* 0x4b */ None,
    /* 0x4c */ None,
    /* 0x4d */ None,
    /* 0x4e */ None,
    /* 0x4f */ None,
    /* 0x50 */ Some((0, 0, 0)),
    /* 0x51 */ Some((0, 0, 0)),
    /* 0x52 */ Some((0, 0, 0)),
    /* 0x53 */ Some((0, 0, 0)),
    /* 0x54 */ Some((0, 0, 0)),
    /* 0x55 */ Some((0, 0, 0)),
    /* 0x56 */ Some((0, 0, 0)),
    /* 0x57 */ Some((0, 0, 0)),
    /* 0x58 */ Some((0, 0, 0)),
    /* 0x59 */ Some((0, 0, 0)),
    /* 0x5a */ Some((0, 0, 0)),
    /* 0x5b */ Some((0, 0, 0)),
    /* 0x5c */ None,
    /* 0x5d */ None,
    /* 0x5e */ None,
    /* 0x5f */ Some((0, 0, 0)),
    /* 0x60 */ Some((0, 0, 0)),
    /* 0x61 */ Some((0, 0, 0)),
    /* 0x62 */ Some((0, 0, 0)),
    /* 0x63 */ Some((0, 0, 0)),
    /* 0x64 */ Some((0, 0, 0)),
    /* 0x65 */ Some((0, 0, 0)),
    /* 0x66 */ Some((0, 0, 0)),
    /* 0x67 */ Some((0, 0, 0)),
    /* 0x68 */ Some((0, 0, 0)),
    /* 0x69 */ Some((0, 0, 0)),
    /* 0x6a */ Some((0, 0, 0)),
    /* 0x6b */ Some((0, 0, 0)),
    /* 0x6c */ Some((0, 0, 0)),
    /* 0x6d */ Some((0, 0, 0)),
    /* 0x6e */ Some((0, 0, 0)),
    /* 0x6f */ Some((0, 0, 0)),
    /* 0x70 */ Some((0, 0, 0)),
    /* 0x71 */ Some((0, 0, 0)),
    /* 0x72 */ Some((0, 0, 0)),
    /* 0x73 */ Some((0, 0, 0)),
    /* 0x74 */ Some((0, 0, 0)),
    /* 0x75 */ Some((0, 0, 0)),
    /* 0x76 */ Some((0, 0, 0)),
    /* 0x77 */ Some((0, 0, 0)),
    /* 0x78 */ Some((0, 0, 0)),
    /* 0x79 */ Some((0, 0, 0)),
    /* 0x7a */ Some((0, 0, 0)),
    /* 0x7b */ Some((0, 0, 0)),
    /* 0x7c */ Some((0, 0, 0)),
    /* 0x7d */ Some((0, 0, 0)),
    /* 0x7e */ Some((0, 0, 0)),
    /* 0x7f */ Some((0, 0, 0)),
    /* 0x80 */ Some((0, 0, 0)),
    /* 0x81 */ Some((0, 0, 0)),
    /* 0x82 */ Some((0, 0, 0)),
    /* 0x83 */ Some((0, 0, 0)),
    /* 0x84 */ Some((0, 0, 0)),
    /* 0x85 */ Some((0, 0, 0)),
    /* 0x86 */ Some((0, 0, 0)),
    /* 0x87 */ Some((0, 0, 0)),
    /* 0x88 */ Some((0, 0, 0)),
    /* 0x89 */ Some((0, 0, 0)),
    /* 0x8a */ Some((0, 0, 0)),
    /* 0x8b */ Some((0, 0, 0)),
    /* 0x8c */ Some((0, 0, 0)),
    /* 0x8d */ Some((0, 0, 0)),
    /* 0x8e */ Some((0, 0, 0)),
    /* 0x8f */ Some((0, 0, 0)),
    /* 0x90 */ Some((0, 0, 0)),
    /* 0x91 */ Some((0, 0, 0)),
    /* 0x92 */ Some((0, 0, 0)),
    /* 0x93 */ Some((0, 0, 0)),
    /* 0x94 */ Some((0, 0, 0)),
    /* 0x95 */ Some((0, 0, 0)),
    /* 0x96 */ Some((0, 0, 0)),
    /* 0x97 */ Some((0, 0, 0)),
    /* 0x98 */ Some((0, 0, 0)),
    /* 0x99 */ Some((0, 0, 0)),
    /* 0x9a */ Some((0, 0, 0)),
    /* 0x9b */ Some((0, 0, 0)),
    /* 0x9c */ Some((0, 0, 0)),
    /* 0x9d */ Some((0, 0, 0)),
    /* 0x9e */ Some((0, 0, 0)),
    /* 0x9f */ Some((0, 0, 0)),
    /* 0xa0 */ Some((0, 0, 0)),
    /* 0xa1 */ Some((0, 0, 0)),
    /* 0xa2 */ Some((0, 0, 0)),
    /* 0xa3 */ Some((0, 0, 0)),
    /* 0xa4 */ Some((0, 0, 0)),
    /* 0xa5 */ None,
    /* 0xa6 */ None,
    /* 0xa7 */ None,
    /* 0xa8 */ None,
    /* 0xa9 */ None,
    /* 0xaa */ None,
    /* 0xab */ None,
    /* 0xac */ None,
    /* 0xad */ None,
    /* 0xae */ None,
    /* 0xaf */ None,
    /* 0xb0 */ None,
    /* 0xb1 */ None,
    /* 0xb2 */ None,
    /* 0xb3 */ None,
    /* 0xb4 */ None,
    /* 0xb5 */ None,
    /* 0xb6 */ None,
    /* 0xb7 */ None,
    /* 0xb8 */ None,
    /* 0xb9 */ None,
    /* 0xba */ None,
    /* 0xbb */ None,
    /* 0xbc */ None,
    /* 0xbd */ None,
    /* 0xbe */ None,
    /* 0xbf */ None,
    /* 0xc0 */ None,
    /* 0xc1 */ None,
    /* 0xc2 */ None,
    /* 0xc3 */ None,
    /* 0xc4 */ None,
    /* 0xc5 */ None,
    /* 0xc6 */ None,
    /* 0xc7 */ None,
    /* 0xc8 */ None,
    /* 0xc9 */ None,
    /* 0xca */ None,
    /* 0xcb */ None,
    /* 0xcc */ None,
    /* 0xcd */ None,
    /* 0xce */ None,
    /* 0xcf */ None,
    /* 0xd0 */ None,
    /* 0xd1 */ None,
    /* 0xd2 */ None,
    /* 0xd3 */ None,
    /* 0xd4 */ None,
    /* 0xd5 */ None,
    /* 0xd6 */ None,
    /* 0xd7 */ None,
    /* 0xd8 */ None,
    /* 0xd9 */ None,
    /* 0xda */ None,
    /* 0xdb */ None,
    /* 0xdc */ None,
    /* 0xdd */ None,
    /* 0xde */ None,
    /* 0xdf */ None,
    /* 0xe0 */ None,
    /* 0xe1 */ None,
    /* 0xe2 */ None,
    /* 0xe3 */ None,
    /* 0xe4 */ None,
    /* 0xe5 */ None,
    /* 0xe6 */ None,
    /* 0xe7 */ None,
    /* 0xe8 */ None,
    /* 0xe9 */ None,
    /* 0xea */ None,
    /* 0xeb */ None,
    /* 0xec */ None,
    /* 0xed */ None,
    /* 0xee */ None,
    /* 0xef */ None,
    /* 0xf0 */ Some((0, 0, 0)),
    /* 0xf1 */ Some((0, 0, 0)),
    /* 0xf2 */ Some((0, 0, 0)),
    /* 0xf3 */ Some((0, 0, 0)),
    /* 0xf4 */ Some((0, 0, 0)),
    /* 0xf5 */ Some((0, 0, 0)),
    /* 0xf6 */ None,
    /* 0xf7 */ None,
    /* 0xf8 */ None,
    /* 0xf9 */ None,
    /* 0xfa */ Some((0, 0, 0)),
    /* 0xfb */ None,
    /* 0xfc */ None,
    /* 0xfd */ Some((0, 0, 0)),
    /* 0xfe */ Some((0, 0, 0)),
    /* 0xff */ Some((0, 0, 0)),
];
